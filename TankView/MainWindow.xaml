<Window x:Class="TankView.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:TankView"
        xmlns:vm="clr-namespace:TankView.ViewModel"
        xmlns:om="clr-namespace:TankView.ObjectModel"
        xmlns:objectModel="clr-namespace:TankView.ObjectModel"
        xmlns:adonisUi="clr-namespace:AdonisUI;assembly=AdonisUI"
        xmlns:adonisExtensions="clr-namespace:AdonisUI.Extensions;assembly=AdonisUI"
        xmlns:controls="clr-namespace:WpfToolkit.Controls;assembly=VirtualizingWrapPanel"
        TextElement.FontWeight="Regular"
        TextElement.FontSize="13"
        TextOptions.TextFormattingMode="Ideal"
        TextOptions.TextRenderingMode="Auto"
        mc:Ignorable="d"
        Title="{Binding ModuloTitle}"
        DataContext="{Binding RelativeSource={RelativeSource Self}}"
        Height="800"
        Width="1300"
        MinWidth="865"
        MinHeight="450">
    <Window.Style>
        <Style TargetType="Window" BasedOn="{StaticResource {x:Type Window}}"/>
    </Window.Style>
    <Window.Resources>
        <om:SizeConverter x:Key="SizeConverter" />
        <BooleanToVisibilityConverter x:Key="BoolVisbilityConverter" />
        <!-- hahahah slay me -->
        <HierarchicalDataTemplate x:Key="FolderDataView" DataType="{x:Type TypeName=vm:Folder}"
                                  ItemsSource="{Binding Folders}">
            <TextBlock Text="{Binding Path=Name, Mode=OneWay}" />
        </HierarchicalDataTemplate>
        <objectModel:GUIDToImageConverter x:Key="GUIDToImageConverter" />
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="1*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Menu Grid.Row="0">
            <MenuItem Header="File">
                <MenuItem Header="Open...">
                    <MenuItem Header="CASC" Click="OpenCASC"
                              IsEnabled="{Binding IsReady, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}" />
                    <MenuItem Header="NGDP" Click="OpenNGDP"
                              IsEnabled="{Binding IsReady, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}" />
                </MenuItem>
                <MenuItem Header="Recent..." ItemsSource="{Binding RecentLocations}">
                    <MenuItem.ItemContainerStyle>
                        <Style TargetType="MenuItem" BasedOn="{StaticResource {x:Type MenuItem}}">
                            <Setter Property="Header" Value="{Binding}" />
                            <Setter Property="IsEnabled"
                                    Value="{Binding IsReady, UpdateSourceTrigger=PropertyChanged, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}" />
                            <EventSetter Event="Click" Handler="OpenRecent" />
                        </Style>
                    </MenuItem.ItemContainerStyle>
                </MenuItem>
                <MenuItem Header="Local Installs..." ItemsSource="{Binding ProductAgent}">
                    <MenuItem.ItemContainerStyle>
                        <Style TargetType="MenuItem" BasedOn="{StaticResource {x:Type MenuItem}}">
                            <Setter Property="Header" Value="{Binding Path=Label}" />
                            <Setter Property="Tag" Value="{Binding Path=Value}" />
                            <Setter Property="IsEnabled"
                                    Value="{Binding IsReady, UpdateSourceTrigger=PropertyChanged, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}" />
                            <Setter Property="ToolTip" Value="{Binding Path=Value}" />
                            <EventSetter Event="Click" Handler="OpenAgent" />
                        </Style>
                    </MenuItem.ItemContainerStyle>
                </MenuItem>
                <Separator />
                <MenuItem Header="Exit" Click="Exit" />
            </MenuItem>
            <MenuItem Header="Options">
                <MenuItem Header="CASC" DataContext="{Binding CASCSettings}">
                    <MenuItem Header="Cache APM"
                              IsChecked="{Binding APM, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                              IsCheckable="True" />
                    <MenuItem Header="Load Manifests"
                              IsChecked="{Binding Manifest, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                              IsCheckable="True" />
                </MenuItem>
                <MenuItem Header="NGDP">
                    <MenuItem Header="Patch Host" ItemsSource="{Binding NGDPPatchHosts}">
                        <MenuItem.ItemContainerStyle>
                            <Style TargetType="MenuItem" BasedOn="{StaticResource {x:Type MenuItem}}">
                                <Setter Property="Header" Value="{Binding Path=Name}" />
                                <Setter Property="Tag" Value="{Binding Path=Host}" />
                                <Setter Property="IsCheckable" Value="True" />
                                <Setter Property="IsChecked" Value="{Binding Path=Active}" />
                                <EventSetter Event="Click" Handler="NGDPHostChange" />
                            </Style>
                        </MenuItem.ItemContainerStyle>
                    </MenuItem>
                </MenuItem>
                <MenuItem Header="Extraction">
                    <MenuItem Header="Convert Sounds" DataContext="{Binding ExtractionSettings}"
                              IsChecked="{Binding EnableConvertSounds, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                              IsCheckable="True" />
                    <MenuItem Header="Convert Images" DataContext="{Binding ExtractionSettings}"
                              IsChecked="{Binding EnableConvertImages, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                              IsCheckable="True" />

                    <MenuItem Header="Image Format" ItemsSource="{Binding ImageExtractionFormats}">
                        <MenuItem.ItemContainerStyle>
                            <Style TargetType="MenuItem" BasedOn="{StaticResource {x:Type MenuItem}}">
                                <Setter Property="Header" Value="{Binding Path=Name}" />
                                <Setter Property="Tag" Value="{Binding Path=Format}" />
                                <Setter Property="IsCheckable" Value="True" />
                                <Setter Property="IsChecked" Value="{Binding Path=Active}" />
                                <EventSetter Event="Click" Handler="ImageExtractionFormatChange" />
                            </Style>
                        </MenuItem.ItemContainerStyle>
                    </MenuItem>
                </MenuItem>
                <MenuItem Header="Preview" DataContext="{Binding GUIDTree}"
                          IsChecked="{Binding ShowPreview, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                          IsCheckable="True" />
                <MenuItem Header="Dark Mode" DataContext="{Binding AppSettings}"
                          IsChecked="{Binding EnableDarkMode, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                          IsCheckable="True" />
                <MenuItem Header="Autoplay" DataContext="{Binding GUIDTree}"
                          IsChecked="{Binding EnableAutoPlay, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                          IsCheckable="True" />
                <MenuItem Header="Only show new files" DataContext="{Binding GUIDTree}"
                          IsChecked="{Binding OnlyShowNewFiles, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                          IsCheckable="True" />
            </MenuItem>
            <MenuItem Header="Extract" Click="ExtractFiles" Width="100"
                      IsEnabled="{Binding IsDataReady, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}" Background="Transparent"
                      HorizontalContentAlignment="Left" VerticalContentAlignment="Center"/>
            <MenuItem Header="Obj Export" Click="ExtractAsObj" Width="100"
                      IsEnabled="{Binding IsDataReady, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}" Background="Transparent"
                      HorizontalContentAlignment="Left" VerticalContentAlignment="Center"/>
            <MenuItem IsEnabled="{Binding IsDataReady, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}" Background="Transparent"
                      HorizontalContentAlignment="Center" VerticalContentAlignment="Center">
                <MenuItem.Header>
                    <Grid>
                        <TextBox
                            Width="300"
                            Text="{Binding SearchQuery, UpdateSourceTrigger=PropertyChanged, Delay=300}"
                            IsEnabled="{Binding IsDataReady, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}"/>
                    </Grid>
                </MenuItem.Header>
            </MenuItem>
        </Menu>
        <Grid Grid.Row="1" DataContext="{Binding GUIDTree}" Name="MainView">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" MinWidth="250" />
                <ColumnDefinition Width="1*" MinWidth="250" />
            </Grid.ColumnDefinitions>
            <TreeView Grid.Column="0" x:Name="FolderView" VirtualizingPanel.IsVirtualizing="True"
                      VirtualizingPanel.VirtualizationMode="Recycling" AllowDrop="False"
                      ItemsSource="{Binding Root, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}"
                      ItemTemplate="{StaticResource FolderDataView}">
                <TreeView.Resources>
                    <ContextMenu x:Key="ExtractTree">
                        <MenuItem Header="Extract" Click="ExtractFolder" />
                    </ContextMenu>
                </TreeView.Resources>
                <TreeView.ItemContainerStyle>
                    <Style TargetType="TreeViewItem" BasedOn="{StaticResource {x:Type TreeViewItem}}">
                        <EventSetter Event="Selected" Handler="ChangeActiveNode" />
                        <Setter Property="ContextMenu" Value="{StaticResource ExtractTree}" />
                        <Setter Property="IsExpanded" Value="{Binding IsExpanded}" />
                        <Setter Property="Foreground" Value="{DynamicResource {x:Static adonisUi:Brushes.ForegroundBrush}}" />
                    </Style>
                </TreeView.ItemContainerStyle>
            </TreeView>
            <GridSplitter Grid.Column="0" Width="3" HorizontalAlignment="Right" VerticalAlignment="Stretch"
                          ResizeDirection="Columns" ShowsPreview="True" ResizeBehavior="CurrentAndNext" />
            <TabControl Grid.Column="1" x:Name="Tabs">
                <TabItem Header="List">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="{Binding ListRow, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}"
                                           MinHeight="250" />
                            <RowDefinition
                                Height="{Binding PreviewRow, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}"
                                MinHeight="{Binding PreviewRowMin, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}" />
                        </Grid.RowDefinitions>
                        <DockPanel Grid.Row="0">
                            <ListView x:Name="FolderItemList"
                                      SelectedItem="{Binding TopSelectedEntry, Mode=OneWayToSource}"
                                      ItemsSource="{Binding SelectedEntries, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}"
                                      VirtualizingPanel.IsVirtualizing="True"
                                      VirtualizingPanel.VirtualizationMode="Recycling"
                                      GridViewColumnHeader.Click="GridViewColumnHeaderClickedHandler"
                                      PreviewKeyDown="FolderItemList_OnKeyDown"
                                      MouseDoubleClick="FolderItemList_OnMouseDoubleClick">
                                <ListView.View>
                                    <GridView>
                                        <GridViewColumn Header="GUID" DisplayMemberBinding="{Binding Filename}"
                                                        Width="135" />
                                        <GridViewColumn Header="Size"
                                                        DisplayMemberBinding="{Binding Size, Converter={StaticResource SizeConverter}}"
                                                        Width="130" />
                                        <GridViewColumn Header="Value" Width="600">
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBlock TextWrapping="Wrap" Text="{Binding StringValue}" />
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>
                                    </GridView>
                                </ListView.View>
                            </ListView>
                        </DockPanel>
                        <GridSplitter
                            IsEnabled="{Binding ShowPreview, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}"
                            Visibility="{Binding ShowPreview, UpdateSourceTrigger=PropertyChanged, Mode=OneWay, Converter={StaticResource BoolVisbilityConverter}}"
                            Grid.Row="0" Height="3" HorizontalAlignment="Stretch" VerticalAlignment="Bottom"
                            ResizeDirection="Rows" ShowsPreview="True" ResizeBehavior="CurrentAndNext">
                            <GridSplitter.Background>
                                <SolidColorBrush Color="White"/>
                            </GridSplitter.Background>
                        </GridSplitter>
                        <DockPanel IsEnabled="{Binding ShowPreview, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}"
                                   Visibility="{Binding ShowPreview, UpdateSourceTrigger=PropertyChanged, Mode=OneWay, Converter={StaticResource BoolVisbilityConverter}}"
                                   Grid.Row="1">
                            <ContentControl Content="{Binding PreviewControl}" />
                        </DockPanel>
                    </Grid>
                </TabItem>
                <TabItem Header="Image" IsEnabled="{Binding ShowPreviewList, UpdateSourceTrigger=PropertyChanged, Mode=OneWay, Converter={StaticResource BoolVisbilityConverter}}" HorizontalAlignment="Right" Width="49">
                    <ListView x:Name="FolderImageList" ItemsSource="{Binding SelectedEntries, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}" VirtualizingPanel.CacheLengthUnit="Page" VirtualizingPanel.CacheLength="1, 1" VirtualizingPanel.ScrollUnit="Item" VirtualizingPanel.VirtualizationMode="Recycling">
                        <ListView.Resources>
                            <Style x:Key="{x:Type ListViewItem}" TargetType="ListViewItem" BasedOn="{StaticResource {x:Type ListViewItem}}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type ListViewItem}">
                                            <Grid>
                                                <Border x:Name="Border"
                                                    Background="{TemplateBinding Background}"
                                                    BorderBrush="{TemplateBinding BorderBrush}"
                                                    BorderThickness="{TemplateBinding BorderThickness}"
                                                    adonisExtensions:CornerRadiusExtension.CornerRadius="{TemplateBinding adonisExtensions:CornerRadiusExtension.CornerRadius}"/>
                                                <ContentPresenter/>
                                            </Grid>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </ListView.Resources>
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="200" />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>
                                    <Image Grid.Row="0" Source="{Binding Converter={StaticResource GUIDToImageConverter}}" Width="200" Height="200"></Image>
                                    <TextBlock Grid.Row="1" Text="{Binding Filename}" TextAlignment="Center"/>
                                </Grid>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                        <ListView.ItemsPanel>
                            <ItemsPanelTemplate>
                                <controls:VirtualizingWrapPanel MouseWheelDeltaItem="2" CacheLength="0" CacheLengthUnit="Item" />
                            </ItemsPanelTemplate>
                        </ListView.ItemsPanel>
                    </ListView>
                </TabItem>
            </TabControl>
        </Grid>
        <StatusBar Grid.Row="2" DataContext="{Binding ProgressInfo}">
            <StatusBarItem VerticalContentAlignment="Stretch">
                <ProgressBar Width="242" Height="Auto"
                             Value="{Binding Percentage, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />
            </StatusBarItem>
            <StatusBarItem Content="{Binding State, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />
        </StatusBar>
    </Grid>
</Window>